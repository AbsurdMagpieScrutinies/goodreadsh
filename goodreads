#!/usr/bin/env bash

KEY="IYew6u6cRN1P8y7aIBoc2A"

# function to return book ID given book title as argument 
book_id() {
    book_title=$1
    id=$(curl -s -X "GET" --data "key=$KEY" --data "q=$book_title" "https://www.goodreads.com/search.xml" \
        | grep -o "<id .*" \
        | sed "s:.*<id.*>\(.*\)<\/id>:\1:p" \
        | awk 'NR==2 {print $0}')
    echo $id
}

if [[ $1 == "rating" ]]; then
    # rating of the book (float)
    curl -s -X "GET" --data "key=$KEY" --data "q=$2" "https://www.goodreads.com/search.xml" \
        | grep -o "<average_rating>.*" \
        | sed "s:.*<average_rating>\(.*\)<\/average_rating>:\1:p" \
        | awk 'NR==1 {print $0}'
elif [[ $1 == "desc" ]]; then
    # description of the book by title
    curl -s -X "GET" --data "key=$KEY" --data "title=$2" "https://www.goodreads.com/book/title.xml" \
        | grep -o "<description.*CDATA.*<\/description>"  \
        | sed "s/<\!\[CDATA\[//g" \
        | sed "s/<[^>]*>//g" \
        | sed "s/\]\].*//g"
elif [[ $1 == "author" ]]; then
    # top books for the author
    uri="https://www.goodreads.com/api/author_url/id=$2"
    author_id=$(curl -s -X "GET" -d "id=$2" -d "key=$KEY" $uri \
        | grep "<author.*" \
        | awk -F '"' '{print $2}')
    author_uri="https://www.goodreads.com/author/show/$author_id"
    curl -s -X "GET" -d "key=$KEY" $author_uri \
        | grep "<title.*<\/title>" \
        | sed "s/<[^>]*>//g"
else
    echo "Option not supported: $1"
fi

